/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
/**
 *
 * @author eduardoSena
 */

import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.entity.Livro;
import model.entity.Usuario;
import model.service.LivroService;
import model.service.UsuarioService;


public class AlugarLivro extends javax.swing.JInternalFrame {

    LivroService livroService = new LivroService();
    UsuarioService usuarioService = new UsuarioService();
    
    public AlugarLivro() {
        initComponents();
        
        try { //Importando dados do arquivo contendo os livros cadastradas
            List<Livro> livros = livroService.importarArquivo("src/main/java/files/livros.txt");
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        try { //Importando dados do arquivo contendo os usuarios cadastradas
            List<Usuario> usuarios = usuarioService.importarArquivo("src/main/java/files/usuarios.txt");
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtList = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(736, 515));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Alugar Livro");

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Titulo");

        txtTitulo.setBackground(new java.awt.Color(0, 0, 0));
        txtTitulo.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        txtTitulo.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Usuario");

        txtUsuario.setBackground(new java.awt.Color(0, 0, 0));
        txtUsuario.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        txtUsuario.setForeground(new java.awt.Color(255, 255, 255));

        btnPesquisar.setBackground(new java.awt.Color(0, 0, 0));
        btnPesquisar.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
        btnPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        txtList.setBackground(new java.awt.Color(0, 0, 0));
        txtList.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        txtList.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(txtList);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Alugar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(162, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(293, 293, 293)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton1)
                                .addComponent(txtTitulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnPesquisar)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel6)
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(105, 105, 105))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        boolean status = false; //verificação de não encontrar livro
        boolean status2 = false; //verificação de encontrar livro
        List<Livro> livros = livroService.listarLivro();
        List<Usuario> usuarios = usuarioService.listarUsuario();
        String nomeLivro = livroService.nomeTitle(txtTitulo.getText());
        DefaultListModel dlm = new DefaultListModel();
        
        for (Livro livro : livros) {
            if (nomeLivro.equals(livro.getTitulo())){
                dlm.addElement(livro.getTitulo()+" / Autor: " + livro.getAutor() 
                        + " / Ano: " + livro.getAno() + " / Quantidade: " + livro.getQuantidade());
                
                status2 = true;
            } else if (nomeLivro.equals(livro.getTitulo())){
                status = true;
            }
            txtList.setModel(dlm);
        }
        if (status == true && status2 == false) {
            JOptionPane.showMessageDialog(null, "Livro não encontrado");
        }
        txtTitulo.setText(""); 
                
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean statusLiv = false; //verificação de não encontrar livro
        boolean statusLiv2 = false; //verificação de encontrar livro
        boolean statusUser = false; //verificação de não encontrar usuario
        boolean statusUser2 = false; //verificação de encontrar usuario
        List<Livro> livros = livroService.listarLivro();
        List<Usuario> usuarios = usuarioService.listarUsuario();
        DefaultListModel dlm = new DefaultListModel();
        
        //Nome do titulo selecionado separado para uso
        String[] sepTitulo = txtList.getSelectedValue().split(" /");
        String titulo = sepTitulo[0];
        
        for (Livro livro : livros) {
            if(titulo.equals(livro.getTitulo())){
                if (livro.getQuantidade() <= 1){
                    JOptionPane.showMessageDialog(null, "Livro " + livro.getTitulo() + " não pode ser alugado");
                    statusLiv2 = true;
                    break;
                }
                for (Usuario usuario : usuarios) {
                    if (usuario.getLogin().equals(txtUsuario.getText()) && usuario.getTipo().equals("Interno")){
                        livroService.alugarLivro(livro.getTitulo());
                        try {
                            livroService.exportarLivro(livros);
                        } catch (IOException ex) {
                            Logger.getLogger(AlugarLivro.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        JOptionPane.showMessageDialog(null, "•  Alugado com sucesso  •"
                                + "\n- Livro: " + livro.getTitulo()
                                + "\n- Aluno: " + usuario.getNome() 
                                + "\n- Dias Alugados: 3 dias.");
                        statusUser2 = true;
                        statusLiv2 = true;
                        break;
                    }
                    if (usuario.getLogin().equals(txtUsuario.getText()) && usuario.getTipo().equals("Professor")){
                        livroService.alugarLivro(livro.getTitulo());
                        try {
                            livroService.exportarLivro(livros);
                        } catch (IOException ex) {
                            Logger.getLogger(AlugarLivro.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        JOptionPane.showMessageDialog(null, "•  Alugado com sucesso  •"
                                + "\n- Livro: " + livro.getTitulo()
                                + "\n- Professor: " + usuario.getNome() 
                                + "\n- Dias Alugados: 10 dias.");
                        statusUser2 = true;
                        statusLiv2 = true;
                        break;
                    } 
                    if (usuario.getLogin().equals(txtUsuario.getText()) && usuario.getTipo().equals("Externo")){
                        livroService.alugarLivro(livro.getTitulo());
                        try {
                            livroService.exportarLivro(livros);
                        } catch (IOException ex) {
                            Logger.getLogger(AlugarLivro.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        JOptionPane.showMessageDialog(null, "•  Alugado com sucesso  •"
                                + "\n- Livro: " + livro.getTitulo()
                                + "\n- Usuário externo: " + usuario.getNome());
                        statusUser2 = true;
                        statusLiv2 = true;
                        break;
                    } 
                    if (usuario.getLogin().equals(txtUsuario.getText()) == false){
                        
                        statusUser = true;
                        statusLiv2 = true;
                    }
                }
            break;
            } else if (titulo.equals(livro.getTitulo()) == false){
                statusLiv = true;
            }  
        }
        if (statusUser == true && statusUser2 == false) {
            JOptionPane.showMessageDialog(null, "Usuario inválido!");
        }
        if (statusLiv == true && statusLiv2 == false) {
            JOptionPane.showMessageDialog(null, "Livro não encontrado!");
        }
        dlm.clear();
        txtList.setModel(dlm);
        txtUsuario.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> txtList;
    private javax.swing.JTextField txtTitulo;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
